name: deploy
on: 
  push:
    branches:
      - main
env:
  TEMPLATE_FILE_PATH: ./infrastructure/main.bicep
  INSTANCE_COUNT: "01"
  WORKLOAD: "corp"
  ENVIRONMENT: "prod"
permissions:
  id-token: write
  contents: read
  actions: read
jobs:
  deploy-app:
    runs-on: ubuntu-latest
    environment: 
      name: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Connect To Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
      - name: Install Azure PowerShell module
        run: |
          pwsh -Command "Install-Module -Name Az -AllowClobber -Force -Scope CurrentUser"
      # - name: Running preflight validation
      #   uses: azure/arm-deploy@v1
      #   with:   
      #     resourceGroupName: rg-${{ env.WORKLOAD }}-${{ env.ENVIRONMENT }}-${{ vars.LOCATION }}-${{ env.INSTANCE_COUNT }}
      #     template: ${{ env.TEMPLATE_FILE_PATH }}
      #     parameters: environment=${{ env.ENVIRONMENT }} location=${{ vars.LOCATION }}  workload=${{ vars.WORKLOAD }}
      #     deploymentMode: Validate
      #     scope: resourcegroup
      # - name: Deploying azure infrastructure
      #   run: |
      #     az deployment group create --resource-group rg-${{ env.WORKLOAD }}-${{ env.ENVIRONMENT }}-${{ vars.LOCATION }}-${{ env.INSTANCE_COUNT }} --template-file ./infrastructure/main.bicep --parameters location=${{ vars.LOCATION }}  workload=${{ vars.WORKLOAD }} environment=${{ env.ENVIRONMENT }} 
      - name: Importing runbooks
        shell: pwsh
        env:
         AZURE_CLIENT_ID: ${{fromJson(secrets.AZURE_CREDENTIALS).clientId}}
         AZURE_CLIENT_SECRET: ${{fromJson(secrets.AZURE_CREDENTIALS).clientSecret}}
         AZURE_SUBSCRIPTION_ID: ${{fromJson(secrets.AZURE_CREDENTIALS).subscriptionId}}
         AZURE_TENANT_ID: ${{fromJson(secrets.AZURE_CREDENTIALS).tenantId}}
        run: |
         # Import Azure PowerShell module
          Import-Module -Name Az -Force
         # Authenticate with Azure using service principal credentials
          $SecurePassword = ConvertTo-SecureString -String $env:AZURE_CLIENT_SECRET -AsPlainText -Force
          $Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $env:AZURE_CLIENT_ID, $SecurePassword
          Connect-AzAccount -ServicePrincipal -TenantId $env:AZURE_TENANT_ID -Credential $Credential -Subscription $env:AZURE_SUBSCRIPTION_ID
          Set-AzContext -SubscriptionName $env:AZURE_SUBSCRIPTION_ID
          ./.github/powershell/deployRunbook.ps1 rg-${{ env.WORKLOAD }}-${{ env.ENVIRONMENT }}-${{ vars.LOCATION }}-${{ env.INSTANCE_COUNT }} aa-${{ env.WORKLOAD }}-${{ env.ENVIRONMENT }}-${{ vars.LOCATION }}-${{ env.INSTANCE_COUNT }}
      - name: Scheduling the runbook.
        run: |
          az deployment group create --resource-group rg-${{ env.WORKLOAD }}-${{ env.ENVIRONMENT }}-${{ vars.LOCATION }}-${{ env.INSTANCE_COUNT }} --template-file ./infrastructure/schedular.bicep --parameters location=${{ vars.LOCATION }}  workload=${{ vars.WORKLOAD }} environment=${{ env.ENVIRONMENT }}
